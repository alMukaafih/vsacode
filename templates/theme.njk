!function(){"use strict";var e={980:function(e,a,c){var r=JSON.parse('{{ pluginJson }}');e=c.hmd(e);const o=acode.require("settings"),{editor:t}=editorManager,i="{{ themeId }}";ace.define("ace/theme/".concat(i,".css"),["require","exports","module"],(function(e,a,c){c.exports="{{ cssText }}"})),ace.define("ace/theme/".concat(i),["require","exports","module","ace/theme/".concat(i,".css"),"ace/lib/dom"],(function(e,a,c){a.isDark=!0,a.cssClass="ace-".concat(i),a.cssText=e("./".concat(i,".css")),e("../lib/dom").importCssString(a.cssText,a.cssClass,!1)})),window.require(["ace/theme/"+i],(function(a){"object"==typeof exports&&e&&(e.exports=a)}));class d{async init(){ace.require("ace/ext/themelist").themes.push({caption:"{{ themeName }}",theme:"ace/theme/"+i,isDark:!0}),o.get("editorTheme")===i&&t.setTheme("ace/theme/"+i),o.on("update:editorTheme",this.onThemeChange)}async destroy(){o.off("update",this.onThemeChange)}onThemeChange(e){const a=o.get("editorTheme"),c=e.split("/").pop();a!==c&&c===i&&o.update({editorTheme:c})}}if(window.acode){const e=new d;acode.setPluginInit(r.id,((a,c,r)=>{let{cacheFileUrl:o,cacheFile:t}=r;a.endsWith("/")||(a+="/"),e.baseUrl=a,e.init(c,t,o)})),acode.setPluginUnmount(r.id,(()=>{e.destroy()}))}}},a={};function c(r){var o=a[r];if(void 0!==o)return o.exports;var t=a[r]={id:r,loaded:!1,exports:{}};return e[r](t,t.exports,c),t.loaded=!0,t.exports}c.hmd=function(e){return(e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e},c(980)}();